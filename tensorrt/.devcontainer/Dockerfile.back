FROM nvidia/cuda:12.0.1-cudnn8-devel-ubuntu22.04 as tensorrt-23.02-py3
ENV LANG C.UTF-8
ARG USER=liushuai
ARG PASSWORD=574794581
ARG DEBIAN_FRONTEND=noninteractive
ARG PYTHON_VERSION=py39
ARG MINICOND_VERSION=4.12.0
ARG MINICOND=Miniconda3-${PYTHON_VERSION}_${MINICOND_VERSION}-Linux-x86_64.sh
ARG CMAKE_VERSION=3.27.0-rc2
ARG HOME=/home/${USER}
ARG USER_UID
ARG USER_GID
ARG USER
ARG PASSWORD
ARG TMUX_VERSION=3.3a
ARG NODE_VERSION=v18.15.0

LABEL maintainer="bleedingfight <bleedingfight@126.com>"
RUN sed -i "s/archive.ubuntu.com/mirrors.bfsu.edu.cn/g" /etc/apt/sources.list && apt update -y && apt install apt-utils nmap git wget zsh sudo openssh-server iproute2 mlocate unzip zlib1g-dev libssl-dev libevent-dev libncurses-dev gnutls-bin sqlite3 tree curl libvorbis-dev libvpx-dev libvpx-dev libx264-dev libmp3lame-dev libopus-dev libfreetype6-dev nasm libjpeg-dev libpng-dev fish -y  && useradd --create-home --no-log-init --shell /bin/bash ${USER} && usermod -G sudo $USER && echo "$USER:$PASSWORD" | chpasswd
RUN wget -c https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-${CMAKE_VERSION}.tar.gz -O /tmp/cmake-${CMAKE_VERSION}.tar.gz && tar xzvf /tmp/cmake-${CMAKE_VERSION}.tar.gz -C /tmp && cd /tmp/cmake-${CMAKE_VERSION} && ./configure && make -j8 && make install 
RUN wget -c https://github.com/tmux/tmux/releases/download/$TMUX_VERSION/tmux-$TMUX_VERSION.tar.gz -O /tmp/tmux-$TMUX_VERSION.tar.gz \ 
&& tar xzvf /tmp/tmux-$TMUX_VERSION.tar.gz -C /tmp && cd /tmp/tmux-$TMUX_VERSION && ./configure && make -j8 && mv tmux /usr/local/bin && wget -c https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage \ 
&& chmod a+x nvim.appimage&&./nvim.appimage --appimage-extract &&mv squashfs-root /usr/local/nvim &&ln -s /usr/local/nvim/AppRun /usr/bin/vim && wget -c https://nodejs.org/dist/$NODE_VERSION/node-$NODE_VERSION-linux-x64.tar.xz -O /tmp/node-$NODE_VERSION-linux-x64.tar.xz  &&mkdir /usr/local/node && tar xJvf /tmp/node-$NODE_VERSION-linux-x64.tar.xz -C /usr/local/node && rm -rf /tmp/*
EXPOSE 22
RUN sed -i 's/required/sufficient/g' /etc/pam.d/chsh && chsh -s /usr/bin/fish && groupadd -r -f -g ${USER_GID} ${USER} && useradd -o -r -l -u ${USER_UID} -g ${USER_GID} -ms /bin/bash ${USER} || true 
USER ${USER}:${USER}
RUN git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && mkdir -p $HOME/.config && git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm\ 
&& wget -c https://mirrors.bfsu.edu.cn/anaconda/miniconda/${MINICOND} -O /tmp/${MINICOND}&&bash /tmp/${MINICOND} -b -p ${HOME}/miniconda3 && rm -rf /tmp/${MINICOND}&& rm -rf /tmp/* && export PATH=${HOME}/miniconda3/bin:${PATH} && python -m pip install -i https://mirrors.bfsu.edu.cn/pypi/web/simple --upgrade pip && pip config set global.index-url https://mirrors.bfsu.edu.cn/pypi/web/simple\
&& npm config set registry https://registry.npmmirror.com && npm config set prefix="${HOME}/npm-global" \ 
echo "channels:\n  - defaults\nshow_channel_urls: true\ndefault_channels:\n  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/main\n  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/r\n  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/msys2\ncustom_channels:\n  conda-forge: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  msys2: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  bioconda: https://mirrors.bfsu.edu.cn/anaconda/cloud\n  menpo: https://mirrors.bfsu.edu.cn/anaconda/cloud\n" > ${HOME}/.condarc && curl https://raw.githubusercontent.com/oh-my-fish/oh-my-fish/master/bin/install | fish
WORKDIR ${HOME}
